default_platform(:ios)

# ---------- 共通の認証キー ----------
def asc_api_key
  app_store_connect_api_key(
    key_id:      "53Z2QR58V8",
    issuer_id:   "69a6de6f-4746-47e3-e053-5b8c7c11a4d1",
    key_filepath: "#{ENV['HOME']}/Developer/Keys/AppStoreConnect/AuthKey_53Z2QR58V8.p8"
  )
end

platform :ios do
  # ① バイナリだけアップロード
  desc "Upload IPA to App Store Connect (TestFlight / Review)"
  lane :upload_binary do
    upload_to_app_store(
      api_key: asc_api_key,
      ipa: "../outputs/release.ipa",
      skip_screenshots: true,
      skip_metadata: true,
      run_precheck_before_submit: false,
      force: true,
      submit_for_review: false,
      metadata_path: "#{Dir.pwd}/metadata/ios"
    )
  end

  # ② メタデータ＋スクショのみアップロード
  desc "Upload metadata & screenshots from fastlane/metadata/ios"
  lane :upload_metadata do
    deliver(
      api_key: asc_api_key,
      submit_for_review: false,     # レビュー提出はバイナリと同時が安全
      skip_screenshots: false,
      skip_binary_upload: true,
      skip_metadata: false,
      force: true,
      skip_app_version_update: true, # Info.plist のバージョンを変更しない
      metadata_path: "#{Dir.pwd}/metadata/ios",
      version_check_wait_retry_limit: 2,  # リトライ回数を2回に制限
      run_precheck_before_submit: false
    )
  end

  # ③ アプリ内課金のメタデータをアップロード
  desc "Upload in-app purchase metadata"
  lane :upload_iap_metadata do
    deliver(
      api_key: asc_api_key,
      submit_for_review: false,
      skip_screenshots: true,
      skip_binary_upload: true,
      skip_metadata: true,
      skip_app_version_update: true,
      force: true,
      metadata_path: "#{Dir.pwd}/metadata/ios",
      run_precheck_before_submit: false
    )
  end

end

platform :android do
  lane :upload_binary do
    supply(
      json_key: "#{ENV['HOME']}/Developer/Keys/GooglePlay/google-play-key.json",
      track: "production",
      aab: "../outputs/release.aab",
      skip_upload_images: true,
      skip_upload_screenshots: true,
      skip_upload_changelogs: true,
      skip_upload_metadata: true,
      package_name: "jp.genit.quizrobo"
    )
  end

  desc "Upload metadata & screenshots from fastlane/metadata/android"
  lane :upload_metadata do
    track   = "production"
    package_name = "jp.genit.quizrobo"

    # ① いまストアにある versionCode を取得
    version_codes = google_play_track_version_codes(
      package_name: package_name,
      track: track,                      # デフォルト production
      json_key: "#{ENV['HOME']}/Developer/Keys/GooglePlay/google-play-key.json"
    )
    latest_code = version_codes.max

    UI.message("Latest versionCode on #{track}: #{latest_code}")

    supply(
      json_key: "#{ENV['HOME']}/Developer/Keys/GooglePlay/google-play-key.json",
      track: "production",
      skip_upload_apk: true,
      skip_upload_aab: true,
      skip_upload_metadata: false,  # メタデータのアップロードを有効化
      skip_upload_images: false,    # 画像のアップロードを有効化
      skip_upload_screenshots: false, # スクリーンショットのアップロードを有効化
      skip_upload_changelogs: true,  # changelogのアップロードをスキップ
      metadata_path: "#{Dir.pwd}/metadata/android",
      package_name: package_name,
      version_code: latest_code
    )
  end

  # ③ アプリ内課金のメタデータをアップロード
  desc "Upload in-app purchase metadata"
  lane :upload_iap_metadata do
    supply(
      json_key: "#{ENV['HOME']}/Developer/Keys/GooglePlay/google-play-key.json",
      track: "production",
      skip_upload_apk: true,
      skip_upload_aab: true,
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true,
      skip_upload_changelogs: true,
      metadata_path: "#{Dir.pwd}/metadata/android",
      package_name: "jp.genit.quizrobo"
    )
  end
end
